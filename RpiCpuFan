#!/bin/sh
### BEGIN INIT INFO
# Provides: RpiCpuFan
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start fan script at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

DAEMON_PATH="/opt/RpiCpuFan"
 
DAEMON=python3
DAEMONOPTS="/opt/RpiCpuFan/RpiCpuFan.py --on-temp=55 --off-temp=50 --pin=18 --local-log=/var/log/RpiCpuFan.log"
 
NAME=RpiCpuFan
DESC="This script controls GPIO CPU fan operations on Raspberry Pi"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
 
case "$1" in
start)
    if [ -f $PIDFILE ]; then
        if [ "`ps axf | grep $NAME | grep -v grep`" ]; then
            echo "$NAME is already running!\nTry restarting instead."
            exit 0
        fi
    fi 
    printf "%-50s" "Starting $NAME..."
    cd $DAEMON_PATH
    PID=`$DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
    #echo "Saving PID" $PID " to " $PIDFILE
    if [ -z $PID ]; then
        printf "%s\n" "Fail"
    else
        echo $PID > $PIDFILE
        printf "%s\n" "Ok"
    fi
;;
status)
    printf "%-50s" "Checking $NAME..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
        else
            echo "Running"
        fi
    else
        printf "%s\n" "Service not running"
    fi
;;
stop)
    printf "%-50s" "Stopping $NAME"
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        cd $DAEMON_PATH
        kill -HUP $PID
        printf "%s\n" "Ok"
        rm -f $PIDFILE
	gpio -g write 18 0
    else
        printf "%s\n" "pidfile not found"
    fi
;;
 
restart)
    $0 stop
    $0 start
;;
 
*)
    echo "Usage: $0 {status|start|stop|restart}"
    exit 1
esac
